group 'com.lfp.jec'
version '1.0-SNAPSHOT'

// 【插件设置】
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// 【编码设置】, java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 【版本设置】
ext {
    slf4jVersion = '1.7.25'
    log4j2Version = '2.8.2'
    springVersion = '4.3.14.RELEASE'
    hibernateVersion = '5.2.10.Final'
    searchVersion = '5.7.1.Final'
}

// 【仓库设置】
repositories {
    mavenCentral()
}

// 【配置管理】
configurations.all {
    // 每次构建时检查远程依赖是否存在更新
    resolutionStrategy.cacheChangingModulesFor 0, 'hours'
    // 采用动态版本声明的依赖不进行缓存
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'

    // 所有需要忽略的包定义在此
    exclude group: 'commons-httpclient'    // 排除 commons-httpclient, 使用 Apache HttpClient
    exclude group: 'commons-logging'       // 排除 commons-logging, 使用slf4j
}

// 【依赖管理】
dependencies {
    compile(
            // slf4j 日志 API
            "org.slf4j:slf4j-api:$slf4jVersion",                        //使用 slf4j 作为日志统一标准接口
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",                   //将 commons-logging 转为 slf4j
            // fast json
            "com.alibaba:fastjson:1.2.35",
            // apache 字符串工具类
            "org.apache.commons:commons-lang3:3.0",
            // spring 核心
            "org.springframework:spring-webmvc:$springVersion",         //MVC
            "org.springframework:spring-orm:$springVersion",            //ORM,sessionFactory和transactionManager使用
            "org.springframework:spring-jdbc:$springVersion",           //JDBC,动态数据源使用
            "org.springframework:spring-test:$springVersion",           //JUnit,单元测试使用
            // hibernate 核心
            "org.hibernate:hibernate-core:$hibernateVersion",
            // dataSource 多数据源管理
            "com.alibaba:druid:1.1.1",                                      //druid 数据库连接池
            "com.mchange:c3p0:0.9.5.2",                                     //c3p0 数据库连接池
            // fileupload 附件上传支持
            "commons-fileupload:commons-fileupload:1.3.3",
            // freemarker 模板引擎
            "org.freemarker:freemarker:2.3.23",
            // jstl 语法
            "javax.servlet:jstl:1.2"
    )

    testCompile(
            "junit:junit:4.12"
    )

    testRuntime(
            // log4j2 日志实现
            "org.apache.logging.log4j:log4j-api:$log4j2Version",        //api,log4j2 接口
            "org.apache.logging.log4j:log4j-core:$log4j2Version",       //core,log4j2 核心
            "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version", //slf4j, 实现slf4j接口的日志记录
            "org.apache.logging.log4j:log4j-web:$log4j2Version",        //web, 应用云web项目可以免去在web.xml中的配置
            // mysql 数据库连接
            "mysql:mysql-connector-java:6.0.6"
    )
}


javadoc {
    options.addStringOption("charset", "UTF-8")
}

//打包文档
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//打包classes
artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}